// Generated by CoffeeScript 1.6.1
(function() {
  var auth, basic, everyone, file, httpServer, nowjs, redis, statik, testClass, _connected,
    _this = this;

  statik = require('node-static');

  file = new statik.Server('./public');

  redis = require("redis");

  auth = require("http-auth");

  basic = auth({
    authRealm: "Metropolitain.io",
    authList: ['garconniere:wesh']
  });

  _connected = 0;

  httpServer = require('http').createServer(function(request, response) {
    return basic.apply(request, response, function(username) {
      return request.addListener('end', function() {
        return file.serve(request, response);
      });
    });
  }).listen(8080);

  nowjs = require("now");

  everyone = nowjs.initialize(httpServer);

  nowjs.on('connect', function(d) {
    _connected += 1;
    if (everyone.now.connected) {
      return everyone.now.connected(_connected);
    }
  });

  nowjs.on('disconnect', function(d) {
    _connected -= 1;
    if (everyone.now.connected) {
      everyone.now.connected(_connected);
    }
    return everyone.now.disconnetedUser({
      user: this.now.user
    });
  });

  everyone.now.validUserName = function(data) {
    var _data;
    _data = {
      user: data
    };
    this.now.acceptUserName(_data);
    everyone.now.newUser(_data);
  };

  everyone.now.askConnected = function() {
    everyone.now.connected(_connected);
  };

  everyone.now.postMessage = function(data) {
    return everyone.now.receiveMessage(data);
  };

  return;

  testClass = function(content) {
    var _end, _start;
    if (/[http]/.test(content)) {
      if (/[.jpg][.png][.gif]/.test(content)) {
        _start = content.indexOf('http');
        _end = null;
        if (content.indexOf('jpg') > 0) {
          _end = content.indexOf('jpg');
        } else if (content.indexOf('png') > 0) {
          _end = content.indexOf('png');
        } else if (content.indexOf('gif')) {
          _end = content.indexOf('gif');
        }
        console.log(_start, _end);
        return _this["class"] += ' img';
      } else {
        return _this["class"] += ' link';
      }
    }
  };

  return;

}).call(this);
